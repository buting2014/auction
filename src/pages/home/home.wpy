<style lang="scss" src="./home.scss">
</style>

<template lang="pug">
  view.home
    view.top-title 创建拍卖
    view
      view.sub-title 商品图片
      repeat(for="{{detailImg}}",index="index",item="item",key="key")
        image.del-img(src="{{item}}")
      uploadImg(
        @handleImg.user="handleChooseImg"
      )
    view
      repeat(for="{{inputList}}",index="index",item="item",key="key")
        view.sub-title {{item.title}}
        inputItem(
          @input.user="handlerInputVal"
          @blur.user="handlerblur"
          @clear.user="handlerclear"
          :item.sync="item"
        )
    view 
      view.sub-title 拍卖时间
      view.time-wrap
        picker.date-time-wrap(mode="multiSelector",value="{{auctionTimeIndex}}",range="{{auctionTimeArr}}",bindchange="bindTimePickerChange")
          view {{ isTimeShow ? ((!day ? auctionTimeArr[0][auctionTimeIndex[0]] : day )+'天'+(!hour ? auctionTimeArr[1][auctionTimeIndex[1]] : hour)+'时'+(!minute ? auctionTimeArr[2][auctionTimeIndex[2]] : minute)+'分') : '开拍时间' }}
        picker.long-time-wrap(value="{{aucLongIdnex}}",range="{{aucLongArr}}",bindchange="bindAucLongChange")
          view {{ isLongShow ? ( longDiff ? longDiff : aucLongArr[aucLongIdnex] ) : '拍卖时长' }}
    view 
      view.sub-title 商品详情
      textarea.texta-style(placeholder="填入商品详情",value="{{detailVal}}",@input="handlerDetail")
    view.bottom-btn-wrap
      view.home-pre(@tap="handlerPre")  预览
      view.home-save(@tap="handlerSave") 保存商品
      view.home-pub(@tap="handlerPub") 发布拍卖
</template>

<script>
  import wepy from 'wepy';
  import moment from 'moment';
  import deepClone from '../../utils/deep-clone';
  import pageBaseMixin from '../../mixins/page-base-mixin.js';
  import defaultData from './data.js';
  import UploadImg from '../../components/upload-img/upload-img';
  import InputItem from '../../components/input-item/input-item';
  import submitForm from '../../utils/submit-form.js';
  import * as api from '../../service/index.js';

  export default class Home extends wepy.page {
    config = {
      navigationBarTitleText: 'Home',
      navigationBarTextStyle: 'black',//导航栏标题颜色，仅支持 black/white
      navigationBarBackgroundColor: '#fff', //导航栏背景颜色，如"#000000"
      backgroundColor: '#ffffff', //窗口的背景色
      backgroundTextStyle: 'dark', //下拉背景字体、loading 图的样式，仅支持 dark/light
      enablePullDownRefresh: false, //是否开启下拉刷新，详见页面相关事件处理函数。
      onReachBottomDistance: 50 // 页面上拉触底事件触发时距页面底部距离，单位为px
    }

    components = {
      uploadImg : UploadImg,
      inputItem : InputItem,
    };

    mixins = [pageBaseMixin];

    defaultData = {};

    // data = deepClone(defaultData);

    data={
      detailImg : [],
      auctionTimeIndex: [0,0,0],
      auctionTimeArr: [[],[],[]],
      isTimeShow: false,
      isLongShow: false,
      aucLongIdnex: 0,
      aucLongArr:[],
      inputList: [
        {
          placeholder: '请输入商品标题',
          title:'商品名称',
          type:'text',
          isShowP : false,
          index: 0,
          value:null
        },
        {
          placeholder: '请输入起拍价',
          title:'起拍价',
          type:'digit',
          isShowP : false,
          index: 1,
          value:null
        },
        {
          placeholder: '请输入商品最高价',
          title:'商品最高价',
          type:'digit',
          isShowP : false,
          index: 2,
          value:null
        },
        {
          placeholder: '加价幅度默认为1元',
          title:'加价幅度',
          type:'digit',
          isShowP : false,
          index: 3,
          value:null
        },
      ],
      detailVal: '',
      longDiff : 0,
      day:0,
      hour:0,
      minute:0,
      itemid:''
    }

    computed = {};

    watch = {};

    methods = {
      handleChooseImg(e){
        let that = this;
        wepy.chooseImage({
          success: (res) =>  {
            // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
            let tempFilePaths = res.tempFilePaths
            wepy.uploadFile({
              url: 'https://mediaapi.daily.weidian.com/upload/v2/direct?scope=koudai&fileType=image', //仅为示例，非真实的接口地址
              filePath: tempFilePaths[0],
              name: 'file',
              header: {
                origin: "127.0.0.1"
              },
              formData:{
                "uploadId":Date.parse(new Date()),
                "file": tempFilePaths[0]
              },
              success: function(ress){
                let data;
                //do something
                // console.log(data.result.url)
                console.log(ress.data)
                if( typeof ress.data === 'string' ){
                  try{
                    data = JSON.parse(ress.data);
                  }catch(err){
                    wepy.showToast({
                      title:'格式有误',
                      mask:true,
                      duration:1000
                    })
                  }
                }else{
                  data = ress.data;
                }
                // console.log(data)
                let img;
                if(data.status.code == '200'){
                  img = 'https:' + data.result.url;
                  that.updateData({
                    detailImg : that.data.detailImg.concat(img)
                  })
                }
                // console.log(that.data.detailImg)
              }
            })

          }
        })
      },
      bindTimePickerChange(e){
        console.log('picker发送选择改变，携带值为', e.detail.value,e.detail.value[0] || e.detail.value[1] || e.detail.value[2])
        this.updateData({
          auctionTimeIndex: e.detail.value,
          isTimeShow : true,
          day:0,
          hour:0,
          minute:0
        })
      },
      bindAucLongChange(e){
        console.log('当前选中值的索引',e.detail.value);
        this.updateData({
          aucLongIdnex: e.detail.value,
          isLongShow: true,
          longDiff:0
        })
      },
      handlerInputVal(e, index){
        // console.log(e.detail.value,'改变值啦', index);
        this.data.inputList[index].isShowP = true
        // console.log(this.data.inputList[index].isShowP)
        this.updateData({
          // inputList
        })
      },
      handlerblur(e, index){
        // console.log(e.detail.value,'改变值了哦哈哈哈', index);
        this.data.inputList[index].value = e.detail.value;
        this.data.inputList[index].isShowP = false;
      },
      handlerclear(e, index){
        console.log(e,'清除数据');
        this.data.inputList[index].isShowP = true;
        this.data.inputList[index].value = null
      },
      handlerDetail(e){
        this.updateData({
          detailVal : e.detail.value
        })
      },
      handlerPre(e){
        console.log(123,this.data.itemid);
        if(this.data.itemid != ""){
          wepy.redirectTo({url: '../detail/detail?itemid='+ this.data.itemid})
        }else{
          wepy.showToast({
            title:'请先保存或发布',
            mask:true,
            duration:1000
          })
        }
      },
      handlerSave(e){
        console.log('hahhah',this.data,this.data.inputList);
        let longHours = this.data.longDiff ? this.data.longDiff : this.data.aucLongArr[this.data.aucLongIdnex];
        let auctionDay = this.data.day ? this.data.day : this.data.auctionTimeIndex[0];
        let auctionHour = this.data.hour ? this.data.hour : this.data.auctionTimeIndex[1];
        let auctionMinute = this.data.minute ? this.data.minute : this.data.auctionTimeIndex[2];
        let start_time = moment().add(auctionDay,'day').add(auctionHour,'hours').add(auctionMinute,'minutes');
        let end_time = moment().add(auctionDay,'day').add(auctionHour,'hours').add(auctionMinute,'minutes').add(longHours,'hours');
        let params = {
          starting_price:this.data.inputList[1].value ? this.data.inputList[1].value : 0,
          ceiling_price:this.data.inputList[2].value ? this.data.inputList[2].value : 0,
          fare_increase:this.data.inputList[3].value ? this.data.inputList[3].value : 0,
          item_name:this.data.inputList[0].value ? this.data.inputList[0].value : 0,
          description:[{
             type:this.data.detailImg,
             content:this.data.detailVal   
          }],
          start_time:start_time ? moment(start_time).valueOf() : 0,
          end_time:end_time ? moment(end_time).valueOf() : 0,
          create_time: new Date().getTime()
        }
        console.log(params)
        api.saveItem(params).then(result=>{
          console.log(result.description);
          this.updateData({
            itemid: result.id
          })
          wepy.redirectTo({url: '../list/list'})
        })
      },
      handlerPub(e){
        let longHours = this.data.longDiff ? this.data.longDiff : this.data.aucLongArr[this.data.aucLongIdnex];
        let auctionDay = this.data.day ? this.data.day : this.data.auctionTimeIndex[0];
        let auctionHour = this.data.hour ? this.data.hour : this.data.auctionTimeIndex[1];
        let auctionMinute = this.data.minute ? this.data.minute : this.data.auctionTimeIndex[2];
        let start_time = moment().add(auctionDay,'day').add(auctionHour,'hours').add(auctionMinute,'minutes');
        let end_time = moment().add(auctionDay,'day').add(auctionHour,'hours').add(auctionMinute,'minutes').add(longHours,'hours');
        let params = {
          starting_price:this.data.inputList[1].value ? this.data.inputList[1].value : 0,
          ceiling_price:this.data.inputList[2].value ? this.data.inputList[2].value : 0,
          fare_increase:this.data.inputList[3].value ? this.data.inputList[3].value : 0,
          item_name:this.data.inputList[0].value ? this.data.inputList[0].value : 0,
          description:[{
             type:this.data.detailImg,
             content:this.data.detailVal   
          }],
          start_time:start_time ? moment(start_time).valueOf() : 0,
          end_time:end_time ? moment(end_time).valueOf() : 0,
          create_time: new Date().getTime()
        }
        api.createNewItem(params).then(result=>{
          console.log(result)
          this.updateData({
            itemid: result.id
          })
          wepy.redirectTo({url: '../list/list'});
        })
      }
    };

    events = {};

    onPrefetch(params, data) {} // 预加载

    onLoad(params, data) {
      for(let i = 1; i <= 31 ; i++){
        this.data.auctionTimeArr[0].push( i < 10 ? '0'+i : i)
      }
      for(let i = 1; i <= 23 ; i++){
        this.data.auctionTimeArr[1].push(i < 10 ? '0'+i : i)
      }
      for(let i = 1; i <= 59 ; i++){
        this.data.auctionTimeArr[2].push(i < 10 ? '0'+i : i)
      }
      for(let i = 1; i <= 24; i++){
        this.data.aucLongArr.push(i)
      }
      let auctionTimeOpt = this.data.auctionTimeIndex;
      this.data.isTimeShow = (auctionTimeOpt[0] || auctionTimeOpt[1] || auctionTimeOpt[2]) ? true : false;
      console.log( auctionTimeOpt[0] || auctionTimeOpt[1] || auctionTimeOpt[2] , (auctionTimeOpt[0] || auctionTimeOpt[1] || auctionTimeOpt[2]) ? true : false  );
      console.log(params.itemid,'params.itemid');
      if(params.itemid){
        api.getItemDetails(params.itemid).then( result => {
          console.log(result);
          let resu = result;
          let longTime = resu.end_time - resu.start_time;
          let startTime = resu.start_time - resu.create_time;
          let days=parseInt(startTime/(24*3600*1000))   
          let leave1=startTime%(24*3600*1000);    
          let hours=parseInt(leave1/(3600*1000));   
          let leave2=leave1%(3600*1000);       
          let minutes=parseInt(leave2/(60*1000)); 

          // this.data.auctionTimeIndex[0] = days;
          // this.data.auctionTimeIndex[1] = hours;
          // this.data.auctionTimeIndex[2] = minutes;

          this.data.inputList[0].value = resu.item_name
          this.data.inputList[1].value = resu.starting_price
          this.data.inputList[2].value = resu.reserve_price
          this.data.inputList[3].value = resu.ceiling_price

          this.updateData({
            detailImg: Array.prototype.isPrototypeOf(resu.description[0].type) ? resu.description[0].type : [],
            detailVal: resu.description[0].content,
            isLongShow: true,
            longDiff: parseInt(longTime/(1000*60*60)),
            isTimeShow: true,
            day: days < 10 ? '0'+days : days,
            hour: hours < 10 ? '0'+hours : hours,
            minute: minutes < 10 ? '0'+minutes : minutes
          })
          
          console.log(days,hours,minutes,parseInt(longTime/(1000*60*60)),this.data.day)
        }).catch(err => {
          console.log(err);
        });
      }
    }	//Function	生命周期函数--监听页面加载

    onShow() {}	//	Function	生命周期函数--监听页面显示

    onRoute() {} // 只有在页面路由时才会触发（包括第一次进入页面）

    onReady() {}	//	Function	生命周期函数--监听页面初次渲染完成

    onHide() {}	//	Function	生命周期函数--监听页面隐藏

    onUnload() {}	//	Function	生命周期函数--监听页面卸载

    onPullDownRefresh() {}	//	Function	页面相关事件处理函数--监听用户下拉动作

    onReachBottom() {}	//	Function	页面上拉触底事件的处理函数

    onShareAppMessage() {}	//	Function	用户点击右上角转发

    onPageScroll() {}	//页面滚动触发事件的处理函数
  }
</script>
